%!PS-Adobe-2.0 EPSF-2.0
%%Title: size_mutation_rate.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Jan 07 17:57:59 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 239
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (size_mutation_rate.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (japh44)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 07 17:57:59 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times New Roman) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
4345 0 R
-63 0 V
stroke
624 480 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 5)]
] -53.3 MRshow
1.000 UL
LTb
720 791 M
31 0 V
4377 0 R
-31 0 V
720 1102 M
63 0 V
4345 0 R
-63 0 V
stroke
624 1102 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 10)]
] -53.3 MRshow
1.000 UL
LTb
720 1412 M
31 0 V
4377 0 R
-31 0 V
720 1723 M
63 0 V
4345 0 R
-63 0 V
stroke
624 1723 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 15)]
] -53.3 MRshow
1.000 UL
LTb
720 2034 M
31 0 V
4377 0 R
-31 0 V
720 2345 M
63 0 V
4345 0 R
-63 0 V
stroke
624 2345 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 20)]
] -53.3 MRshow
1.000 UL
LTb
720 2656 M
31 0 V
4377 0 R
-31 0 V
720 2966 M
63 0 V
4345 0 R
-63 0 V
stroke
624 2966 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 25)]
] -53.3 MRshow
1.000 UL
LTb
720 3277 M
31 0 V
4377 0 R
-31 0 V
720 3588 M
63 0 V
4345 0 R
-63 0 V
stroke
624 3588 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 30)]
] -53.3 MRshow
1.000 UL
LTb
720 480 M
0 63 V
0 3045 R
0 -63 V
stroke
720 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1035 480 M
0 31 V
0 3077 R
0 -31 V
1350 480 M
0 63 V
0 3045 R
0 -63 V
stroke
1350 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 5)]
] -53.3 MCshow
1.000 UL
LTb
1665 480 M
0 31 V
0 3077 R
0 -31 V
1979 480 M
0 63 V
0 3045 R
0 -63 V
stroke
1979 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
2294 480 M
0 31 V
0 3077 R
0 -31 V
2609 480 M
0 63 V
0 3045 R
0 -63 V
stroke
2609 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 15)]
] -53.3 MCshow
1.000 UL
LTb
2924 480 M
0 31 V
0 3077 R
0 -31 V
3239 480 M
0 63 V
0 3045 R
0 -63 V
stroke
3239 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 20)]
] -53.3 MCshow
1.000 UL
LTb
3554 480 M
0 31 V
0 3077 R
0 -31 V
3869 480 M
0 63 V
0 3045 R
0 -63 V
stroke
3869 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 25)]
] -53.3 MCshow
1.000 UL
LTb
4183 480 M
0 31 V
0 3077 R
0 -31 V
4498 480 M
0 63 V
0 3045 R
0 -63 V
stroke
4498 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 30)]
] -53.3 MCshow
1.000 UL
LTb
4813 480 M
0 31 V
0 3077 R
0 -31 V
5128 480 M
0 63 V
0 3045 R
0 -63 V
stroke
5128 320 M
[ [(Times New Roman) 160.0 0.0 true true 0 ( 35)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
720 3588 N
720 480 L
4408 0 V
0 3108 V
-4408 0 V
Z stroke
LCb setrgbcolor
160 2034 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Italic) 160.0 0.0 true true 0 (s)]
[(Times New Roman) 160.0 0.0 true true 0 ( - Average program size)]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
2924 80 M
[ [(Italic) 160.0 0.0 true true 0 (n)]
[(Times New Roman) 160.0 0.0 true true 0 ( - Generation)]
] -53.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1392 3445 M
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Times New Roman) 160.0 0.0 true true 0 (=0.0)]
] -53.3 MRshow
LT0
1488 3445 M
447 0 V
846 659 M
126 -4 V
126 -21 V
126 -31 V
126 7 V
126 12 V
126 9 V
126 4 V
125 10 V
126 9 V
126 11 V
126 0 V
126 -36 V
126 1 V
126 24 V
126 29 V
126 -19 V
126 -47 V
126 -67 V
126 -14 V
126 24 V
126 25 V
126 22 V
126 26 V
126 24 V
126 18 V
125 32 V
126 41 V
126 44 V
126 55 V
126 47 V
126 58 V
126 58 V
126 70 V
126 66 V
846 659 Pls
972 655 Pls
1098 634 Pls
1224 603 Pls
1350 610 Pls
1476 622 Pls
1602 631 Pls
1728 635 Pls
1853 645 Pls
1979 654 Pls
2105 665 Pls
2231 665 Pls
2357 629 Pls
2483 630 Pls
2609 654 Pls
2735 683 Pls
2861 664 Pls
2987 617 Pls
3113 550 Pls
3239 536 Pls
3365 560 Pls
3491 585 Pls
3617 607 Pls
3743 633 Pls
3869 657 Pls
3995 675 Pls
4120 707 Pls
4246 748 Pls
4372 792 Pls
4498 847 Pls
4624 894 Pls
4750 952 Pls
4876 1010 Pls
5002 1080 Pls
5128 1146 Pls
1711 3445 Pls
1.000 UP
1.000 UL
LT1
LTb
1392 3285 M
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Times New Roman) 160.0 0.0 true true 0 (=0.05)]
] -53.3 MRshow
LT1
1488 3285 M
447 0 V
846 663 M
126 -7 V
126 -29 V
126 -27 V
126 12 V
126 3 V
126 2 V
126 2 V
125 8 V
126 8 V
126 10 V
126 -9 V
126 -12 V
126 35 V
126 27 V
126 -1 V
126 -42 V
126 -60 V
126 8 V
126 28 V
126 22 V
126 23 V
126 42 V
126 42 V
126 41 V
126 43 V
125 50 V
126 68 V
126 79 V
126 90 V
126 89 V
126 103 V
126 99 V
126 103 V
126 129 V
846 663 Crs
972 656 Crs
1098 627 Crs
1224 600 Crs
1350 612 Crs
1476 615 Crs
1602 617 Crs
1728 619 Crs
1853 627 Crs
1979 635 Crs
2105 645 Crs
2231 636 Crs
2357 624 Crs
2483 659 Crs
2609 686 Crs
2735 685 Crs
2861 643 Crs
2987 583 Crs
3113 591 Crs
3239 619 Crs
3365 641 Crs
3491 664 Crs
3617 706 Crs
3743 748 Crs
3869 789 Crs
3995 832 Crs
4120 882 Crs
4246 950 Crs
4372 1029 Crs
4498 1119 Crs
4624 1208 Crs
4750 1311 Crs
4876 1410 Crs
5002 1513 Crs
5128 1642 Crs
1711 3285 Crs
1.000 UP
1.000 UL
LT2
LTb
1392 3125 M
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Times New Roman) 160.0 0.0 true true 0 (=0.25)]
] -53.3 MRshow
LT2
1488 3125 M
447 0 V
846 669 M
126 21 V
126 5 V
126 -11 V
126 17 V
126 19 V
126 31 V
126 26 V
125 23 V
126 23 V
126 34 V
126 27 V
126 19 V
126 23 V
126 28 V
126 35 V
126 36 V
126 22 V
126 37 V
126 24 V
126 26 V
126 25 V
126 14 V
126 -4 V
126 -2 V
126 5 V
125 32 V
126 6 V
126 28 V
126 17 V
126 37 V
126 38 V
126 56 V
126 45 V
126 35 V
846 669 Star
972 690 Star
1098 695 Star
1224 684 Star
1350 701 Star
1476 720 Star
1602 751 Star
1728 777 Star
1853 800 Star
1979 823 Star
2105 857 Star
2231 884 Star
2357 903 Star
2483 926 Star
2609 954 Star
2735 989 Star
2861 1025 Star
2987 1047 Star
3113 1084 Star
3239 1108 Star
3365 1134 Star
3491 1159 Star
3617 1173 Star
3743 1169 Star
3869 1167 Star
3995 1172 Star
4120 1204 Star
4246 1210 Star
4372 1238 Star
4498 1255 Star
4624 1292 Star
4750 1330 Star
4876 1386 Star
5002 1431 Star
5128 1466 Star
1711 3125 Star
1.000 UP
1.000 UL
LT3
LTb
1392 2965 M
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Times New Roman) 160.0 0.0 true true 0 (=0.5)]
] -53.3 MRshow
LT3
1488 2965 M
447 0 V
846 676 M
126 70 V
126 62 V
126 32 V
126 36 V
126 50 V
126 69 V
126 56 V
125 51 V
126 66 V
126 52 V
126 53 V
126 61 V
126 47 V
126 78 V
126 65 V
126 66 V
126 61 V
126 48 V
126 56 V
126 66 V
126 57 V
126 60 V
126 70 V
126 68 V
126 61 V
125 70 V
126 60 V
126 48 V
126 80 V
126 67 V
126 51 V
126 48 V
126 69 V
126 72 V
846 676 Box
972 746 Box
1098 808 Box
1224 840 Box
1350 876 Box
1476 926 Box
1602 995 Box
1728 1051 Box
1853 1102 Box
1979 1168 Box
2105 1220 Box
2231 1273 Box
2357 1334 Box
2483 1381 Box
2609 1459 Box
2735 1524 Box
2861 1590 Box
2987 1651 Box
3113 1699 Box
3239 1755 Box
3365 1821 Box
3491 1878 Box
3617 1938 Box
3743 2008 Box
3869 2076 Box
3995 2137 Box
4120 2207 Box
4246 2267 Box
4372 2315 Box
4498 2395 Box
4624 2462 Box
4750 2513 Box
4876 2561 Box
5002 2630 Box
5128 2702 Box
1711 2965 Box
1.000 UP
1.000 UL
LT4
LTb
1392 2805 M
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Times New Roman) 160.0 0.0 true true 0 (=0.8)]
] -53.3 MRshow
LT4
1488 2805 M
447 0 V
846 668 M
972 801 L
126 129 V
126 102 V
126 114 V
126 95 V
126 104 V
126 115 V
125 86 V
126 110 V
126 83 V
126 114 V
126 81 V
126 93 V
126 88 V
126 83 V
126 91 V
126 91 V
126 84 V
126 105 V
126 96 V
126 56 V
126 92 V
126 41 V
126 72 V
126 94 V
125 65 V
126 90 V
126 57 V
126 81 V
126 81 V
126 83 V
126 9 V
126 60 V
126 40 V
846 668 BoxF
972 801 BoxF
1098 930 BoxF
1224 1032 BoxF
1350 1146 BoxF
1476 1241 BoxF
1602 1345 BoxF
1728 1460 BoxF
1853 1546 BoxF
1979 1656 BoxF
2105 1739 BoxF
2231 1853 BoxF
2357 1934 BoxF
2483 2027 BoxF
2609 2115 BoxF
2735 2198 BoxF
2861 2289 BoxF
2987 2380 BoxF
3113 2464 BoxF
3239 2569 BoxF
3365 2665 BoxF
3491 2721 BoxF
3617 2813 BoxF
3743 2854 BoxF
3869 2926 BoxF
3995 3020 BoxF
4120 3085 BoxF
4246 3175 BoxF
4372 3232 BoxF
4498 3313 BoxF
4624 3394 BoxF
4750 3477 BoxF
4876 3486 BoxF
5002 3546 BoxF
5128 3586 BoxF
1711 2805 BoxF
1.000 UL
LTb
720 3588 N
720 480 L
4408 0 V
0 3108 V
-4408 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Italic Times New Roman
